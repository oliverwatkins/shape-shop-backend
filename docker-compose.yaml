# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service. Concatonates shape-shop-backend-app-server_1
  app-server:
    # Configuration for building the docker image for the backend service
    build:
#      context: polling-app-server # Use an image built from the specified dockerfile in the `polling-app-server` directory.
      context: . # same dir
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      # this will override application.properties values as far as I can tell
      SPRING_DATASOURCE_URL: jdbc:mysql://some-mysql:3306/shapeshop?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
#      jdbc:mysql://mysql-db2:3306/customer?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: admin
      SPRING_DATASOURCE_PASSWORD: admin
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
#      - frontend

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: shapeshop
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:








#  frontend:


#  # Frontend Service
#  app-client:
#    build:
#      context: polling-app-client # Use an image built from the specified dockerfile in the `polling-app-client` directory.
#      dockerfile: Dockerfile
#      args:
#        REACT_APP_API_BASE_URL: http://127.0.0.1:8080/api
#    ports:
#      - "9090:80" # Map the exposed port 80 on the container to port 9090 on the host machine
#    restart: always
#    depends_on:
#      - app-server
#    networks:
#      - frontend